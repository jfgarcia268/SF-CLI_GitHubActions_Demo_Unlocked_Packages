name: Create Test Scratch Org

on:
  workflow_dispatch:

jobs:
  GetBranchName:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6.4
    outputs: 
      branchName: ${{ steps.branch-name.outputs.current_branch }} 
  CreateScratchOrg:
    needs: GetBranchName
    runs-on: ubuntu-latest
    container:
      image: jfgarcia268/vlocity_sfdx:core-sf-cli
    steps:  
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Login DevHub
      run: |
          echo "${{ secrets.RSA_PRIVATE_KEY }}"   > server.key
          sf auth jwt grant --client-id ${{ secrets.DEVHUB_clientid }}  --jwt-key-file server.key --username ${{ secrets.DEVHUB_USERNAME }} --instance-url https://login.salesforce.com --alias DEVHUB
    - name: Create Scratch Org
      id: create_so
      run: |
        sf org create scratch --definition-file config/project-scratch-def.json --alias ALIAS --duration-days 29 --target-dev-hub DEVHUB
        sf org generate password --target-org ALIAS
        if [ -f org.info ]; then
          rm org.info  
        fi
        sf org display --target-org ALIAS --verbose  >> org.info
        sf org display --target-org ALIAS --verbose --json >> credential.json
        SO_Password=$( jq -r  '.result.password' credential.json) 
        SO_User_Name=$( jq -r  '.result.username' credential.json) 
        SO_URL=$( jq -r  '.result.instanceUrl' credential.json) 
        echo "SO_User_Name=${SO_User_Name}\n" >> $GITHUB_OUTPUT
        echo "SO_URL=${SO_URL}\n" >> $GITHUB_OUTPUT
        echo "GITHUB_OUTPUT:"
        cat "$GITHUB_OUTPUT"
    - uses: actions/upload-artifact@v3
      with:
        name: Org-Credentials
        path: ./org.info  
    outputs: 
      sousername: ${{ steps.create_so.outputs.SO_User_Name }} 
      sourl: ${{ steps.create_so.outputs.SO_URL }} 
  InstallPackages:
    needs: 
     - CreateScratchOrg
     - GetBranchName
    uses: ./.github/workflows/InstallPackage.yml
    with:
      sousername: ${{ needs.CreateScratchOrg.outputs.sousername }}
      sourl: ${{ needs.CreateScratchOrg.outputs.sourl }}
      packageName: ${{ needs.GetBranchName.outputs.branchName }}
    secrets:
      DEVHUB_clientid: ${{ secrets.DEVHUB_clientid }}
      RSA_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY }}
      PACKAGES_KEY: ${{ secrets.PACKAGES_KEY }}